{"version":3,"sources":["App.js","pricing.js","reportWebVitals.js","index.js"],"names":["App","useState","items","setItems","cartItems","setCartItems","total","setTotal","useEffect","a","axios","get","then","response","data","onClick","salesTax","price","calculateTotal","map","item","idx","name","e","prevCartItems","filter","cartItem","removeFromCart","className","style","display","flexWrap","addToCart","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSA6DeA,MAvDf,WACI,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,qBAA1B,mBAAOK,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,oBAAS,sBAAC,4BAAAC,EAAA,sEACaC,IAAMC,IAAI,qDACxBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKZ,SAF9B,OACAY,EADA,OAGNX,EAASW,GAHH,2CAIP,IAeC,gCACI,4DAEA,gCACI,wBAAQ,UAAQ,kBAAkBC,QATrB,WACrBR,EC1BD,SAAwBH,EAAWY,GACtC,IADgD,EAC5CV,EAAQ,EADoC,cAE7BF,GAF6B,IAEhD,2BACIE,GAD0B,QACZW,MAH8B,8BAKhD,OAAOX,EDqBMY,CAAed,KAQhB,6BAEIE,EAAQ,2CAAcA,KAAa,KAEvC,wCACA,6BACKF,EAAUe,KAAI,SAACC,EAAMC,GAAP,OACX,+BACKD,EAAKE,KADV,QAEI,wBAAQP,QAAS,SAACQ,GAAD,OAtBlB,SAACH,GACpBf,GAAa,SAAAmB,GAAa,OAAIA,EAAcC,QAAO,SAAAC,GAAQ,OAAIA,EAASJ,OAASF,EAAKE,WAqB1CK,CAAeP,IAAvC,sBAFKC,WAQrB,qBAAKO,UAAU,kBAAkBC,MAAO,CAACC,QAAS,OAAQC,SAAU,QAApE,SACK7B,EAAMiB,KAAI,SAACC,EAAMC,GAAP,OACP,gCACI,8BAAID,EAAKE,KAAT,OAAmBF,EAAKH,SACxB,wBAAQF,QAAS,SAACQ,GAAD,OApCnB,SAACH,GACff,GAAa,SAAAmB,GAAa,4BAAQA,GAAR,CAAuBJ,OAmCTY,CAAUZ,IAAlC,2BAFMC,YEvCfY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.44bfc024.chunk.js","sourcesContent":["import './App.css';\nimport {useEffect, useState} from \"react\";\nimport {calculateTotal} from \"./pricing\";\nimport axios from \"axios\";\n\n\nfunction App() {\n    const [items, setItems] = useState([]);\n    const [cartItems, setCartItems] = useState([]);\n    const [total, setTotal] = useState();\n\n    useEffect(async () => {\n        const data = await axios.get(\"https://nathans-backend-store.herokuapp.com/items\")\n            .then(response => response.data.items)\n        setItems(data);\n    }, [])\n\n    const addToCart = (item) => {\n        setCartItems(prevCartItems => [...prevCartItems, item]);\n    };\n\n    const removeFromCart = (item) => {\n        setCartItems(prevCartItems => prevCartItems.filter(cartItem => cartItem.name !== item.name));\n    }\n\n    const onCalculateTotal = () => {\n        setTotal(calculateTotal(cartItems));\n    }\n\n    return (\n        <div>\n            <h1>Nathan's Amazing Web Store</h1>\n\n            <div>\n                <button data-cy=\"calculate-total\" onClick={onCalculateTotal}>Calculate total</button>\n                {\n                    total ? <p>Total is: {total}</p> : null\n                }\n                <p>Cart: 0</p>\n                <ul>\n                    {cartItems.map((item, idx) =>\n                        <li key={idx}>\n                            {item.name} &nbsp;\n                            <button onClick={(e) => removeFromCart(item)}>Remove</button>\n                        </li>\n                    )}\n                </ul>\n            </div>\n\n            <div className=\"inventory-items\" style={{display: \"flex\", flexWrap: \"wrap\"}}>\n                {items.map((item, idx) =>\n                    <div key={idx}>\n                        <p>{item.name} | ${item.price}</p>\n                        <button onClick={(e) => addToCart(item)}>Add to cart</button>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","export function calculateTotal(cartItems, salesTax) {\n    let total = 0\n    for (const item of cartItems) {\n        total += item.price\n    }\n    return total\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}